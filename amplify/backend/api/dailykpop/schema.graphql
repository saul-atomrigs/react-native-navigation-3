# This "input" configures a global authorization rule to enable public access to
# all models in this schema. Learn more about authorization rules here: https://docs.amplify.aws/cli/graphql/authorization-rules
input AMPLIFY {
 globalAuthRule: AuthRule = { allow: public }
}

type Blog @model {
 id: ID!
 name: String!
 posts: [Post] @hasMany
}

type Post @model {
 id: ID!
 title: String!
 #  content: String!
 blog: Blog @belongsTo
 #  comments: [Comment] @hasMany(indexName: "byPost", fields: ["id"])
 comments: [Comment] @hasMany
 createdAt: AWSDateTime! #important to keep it to have filter with keys
 updatedAt: AWSDateTime! #important to keep it to have filter with keys
}

type Comment @model {
 id: ID!
 postCommentsId: ID
 # postID: ID @index(name: "byPost", sortKeyFields: ["content"])
 post: Post @belongsTo
 content: String!
 createdAt: AWSDateTime! #important to keep it to have filter with keys
 updatedAt: AWSDateTime! #important to keep it to have filter with keys
}

type Calendar @model {
 id: ID!
 name: String!
 events: [Event] @hasMany
}

type Event @model {
 id: ID!
 event: String!
 artist: String!
 date: String!
}

# type Subscription {
#  onCommentByPostId(postCommentsId: ID!): Comment
#   @aws_subscribe(mutations: ["createComment"])
# }

# type ChatMessage @model {
#  id: ID!
#  senderUserSub: String
#  receiverUserSub: String
#  messageText: String
#  messageImageFilename: String
#  dateSent: String!
# }

# type Picture @model {
#  id: ID!
#  name: String!
#  username: String!
#  file: S3Object
# }

# type S3Object {
#  bucket: String!
#  region: String!
#  key: String!
#  uri: String!
# }

# type Like @model {
#  id: ID!
#  userId: String!
#  username: String!
#  picture: Picture @connection(name: "PictureLikes")
# }

# type Picture @model {
#  id: ID!
#  userId: String!
#  username: String!
#  file: S3Object
#  likes: [Like] @connection(name: "PictureLikes")
# }
